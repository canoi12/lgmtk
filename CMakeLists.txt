cmake_minimum_required(VERSION 3.10.0 FATAL_ERROR)
project(lgmtk VERSION 0.1.0 LANGUAGES C)

set(LUA_VERSION "5.4" CACHE STRING "Set the Lua version to use")
set(LUA_LIB "lua${LUA_VERSION}")

if (NOT DEFINED EMSCRIPTEN)
    include("cmake/CheckSDL2.cmake")
else ()
    find_package(SDL2 REQUIRED)
endif ()
include("cmake/CheckLua.cmake")

if (NOT ANDROID AND NOT EMSCRIPTEN)
    find_package(OpenGL REQUIRED)
else ()
    set (OPENGL_LIBRARIES GLESv1_CM GLESv2)
endif ()

include_directories(include/ third/glad/include/ third/)
file(GLOB LGMTK_SOURCE src/*.c src/modules/*.c third/glad/src/glad.c)
if (EMSCRIPTEN)
    list(POP_BACK LGMTK_SOURCE)
endif ()

include_directories(${SDL2_INCLUDE_DIRS})
set(LIBRARIES ${LUA_LIB} ${OPENGL_LIBRARIES} ${SDL2_LIBRARIES})

if (NOT DEFINED EMSCRIPTEN)
    add_library(luaSDL2 SHARED src/modules/sdl.c)
    target_link_libraries(luaSDL2 ${SDL2_LIBRARIES})
    set_target_properties(luaSDL2 PROPERTIES OUTPUT_NAME "sdl2")
    if (NOT MSVC)
        set_target_properties(luaSDL2 PROPERTIES PREFIX "")
    endif ()

    add_library(luaGL SHARED src/modules/gl.c third/glad/src/glad.c)
    target_link_libraries(luaGL ${OPENGL_LIBRARIES})
    set_target_properties(luaGL PROPERTIES OUTPUT_NAME "gl")
    if (NOT MSVC)
        set_target_properties(luaGL PROPERTIES PREFIX "")
    endif ()

    add_library(luaImage SHARED src/modules/image.c)
    set_target_properties(luaImage PROPERTIES OUTPUT_NAME "image")
    if (NOT MSVC)
        set_target_properties(luaImage PROPERTIES PREFIX "")
    endif ()

    add_library(${PROJECT_NAME} SHARED ${LGMTK_SOURCE})
    target_link_libraries(${PROJECT_NAME} ${LIBRARIES})
    if (MSVC)
        target_compile_definitions(${PROJECT_NAME} PRIVATE -DSELENE_EXPORT_DLL)
    else ()
        set_target_properties(${PROJECT_NAME} PROPERTIES PREFIX "")
    endif ()
    set_target_properties(${PROJECT_NAME} PROPERTIES OUTPUT_NAME ${PROJECT_NAME})

    add_executable(lua third/lua/lua5.4/source/src/lua.c)
    target_link_libraries(lua ${LUA_LIB})
else ()
    add_library(${PROJECT_NAME} STATIC ${LGMTK_SOURCE})
endif ()

